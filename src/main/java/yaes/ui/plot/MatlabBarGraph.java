package yaes.ui.plot;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

/**
 * Facilitates runtime creation of Matlab bar graphs.
 * 
 * @author dejongp
 */
public class MatlabBarGraph {
    // colormap choices
    public static final String COLORMAP_AUTUMN    = "autumn";
    public static final String COLORMAP_BONE      = "bone";
    public static final String COLORMAP_COLORCUBE = "colorcube";
    public static final String COLORMAP_COOL      = "cool";
    public static final String COLORMAP_COPPER    = "copper";
    public static final String COLORMAP_FLAG      = "flag";
    public static final String COLORMAP_GRAY      = "gray";
    public static final String COLORMAP_HOT       = "hot";
    public static final String COLORMAP_HSV       = "hsv";
    public static final String COLORMAP_JET       = "jet";
    public static final String COLORMAP_LINES     = "lines";
    public static final String COLORMAP_PINK      = "pink";
    public static final String COLORMAP_PRISM     = "prism";
    public static final String COLORMAP_SPRING    = "spring";
    public static final String COLORMAP_SUMMER    = "summer";
    public static final String COLORMAP_WHITE     = "white";
    public static final String COLORMAP_WINTER    = "winter";

    /**
     * Sample usage.
     * 
     * @param args
     * @throws IOException
     */
    public static void main(String args[]) throws IOException {
        // usage:
        //
        // example with multiple groups
        //
        final MatlabBarGraph graph = new MatlabBarGraph();
        graph.setColormap(MatlabBarGraph.COLORMAP_SUMMER);
        graph.addYDataSet(new double[] { 5.5, 6.6, 7.7 });
        graph.addYDataSet(new double[] { 10.0, 12.5, 8.8 });
        graph.addYDataSet(new double[] { 12.5, 8.0, 5.0 });
        graph.addYDataSet(new double[] { 10.5, 11.5, 7.1 });
        // elements in X Data must be set for other than simple 1,2,3 sequence;
        // e.g.,
        // graph.addXDataSet(new double[]{2.0, 4.0, 6.0, 8.0});
        graph.addLegendItem("SET 1");
        graph.addLegendItem("SET 2");
        graph.addLegendItem("SET 3");
        graph.generateMatlabFile("C:\\MatLab6p5\\work\\testbar1.m");
        //
        // example with single group
        //
        final MatlabBarGraph graph2 = new MatlabBarGraph();
        graph2.addYDataSet(new double[] { 5.5, 6.6, 7.7, 3.3, 6.7, 5.2 });
        graph2.setXData(new double[] { 2.0, 4.0, 6.0, 10.0, 12.0, 14.0 });
        graph2.addLegendItem("blah");
        graph2.generateMatlabFile("C:\\MatLab6p5\\work\\testbar2.m");
    }

    private String               colormap = MatlabBarGraph.COLORMAP_WINTER;
    private final List<String>   legend   = new ArrayList<>();
    // private String xLabel = null;
    // private String yLabel = null;
    private double[]             xData    = null;

    private final List<double[]> yData    = new ArrayList<>();

    /**
     * Add a legend entry which will appear in the graph. Each should correspond
     * to one Y Data set. This method is optional.
     * 
     * @param legendItem
     */
    public void addLegendItem(String legendItem) {
        legend.add(legendItem);
    }

    /**
     * Add a Y Data Set. Multiple Y Data Sets can be added, meaning results will
     * be grouped. At least one y data set must be added.
     * 
     * @param data
     *            y data set to add
     */
    public void addYDataSet(double[] data) {
        yData.add(data);
    }

    /**
     * Generate the matlab data file (*.m).
     * 
     * @param filename
     *            absolution file path & name of datafile, e.g.,
     *            "C:\\MatLab6p5\\work\\testbar1.m"
     * @throws IOException
     */
    public void generateMatlabFile(String filename) throws IOException {
        final StringBuffer buffer = new StringBuffer();
        buffer.append("% Generated by YAES\n");
        buffer.append("colormap " + colormap + ";\n");
        for (int i = 0; i < yData.size(); i++) {
            final double[] dataSet = yData.get(i);
            buffer.append("YSET" + i + " = [");
            for (double element : dataSet) {
                buffer.append(element + " ");
            }
            buffer.append("];\n");
        }
        if (xData == null) {
            buffer.append("bar([");
        } else {
            buffer.append("XDATA = [");
            for (double element : xData) {
                buffer.append(element + " ");
            }
            buffer.append("]\n");
            buffer.append("bar([XDATA],[");
        }
        for (int i = 0; i < yData.size(); i++) {
            buffer.append("YSET" + i);
            if (i < yData.size() - 1) {
                buffer.append("; ");
            }
        }
        buffer.append("]);\n");
        if (legend.size() > 0) {
            buffer.append("legend(");
            for (int i = 0; i < legend.size(); i++) {
                buffer.append("'" + legend.get(i) + "'");
                if (i < legend.size() - 1) {
                    buffer.append(",");
                }
            }
            buffer.append(")\n");
        }
        buffer.append("grid");
        final FileOutputStream out = new FileOutputStream(filename);
        final PrintWriter pw = new PrintWriter(out);
        pw.write(buffer.toString());
        pw.close();
        out.close();
    }

    /**
     * X Axis label. Optional.
     * 
     * @param string
     */
    /*
     * public void setXLabel(String string) { xLabel = string; }
     * 
     * /** Y axis label. Optional.
     * 
     * @param string
     */
    /*
     * public void setYLabel(String string) { yLabel = string; }
     */
    /**
     * Set the colormap. Optional; if none is specified, defaults to "winter."
     * Colormap constants are included in this class.
     * 
     * @param string
     */
    public void setColormap(String string) {
        colormap = string;
    }

    /**
     * Add x axis numbering. Optional; if none are specified, counting numbers
     * starting with 1 will be used.
     * 
     * @param ds
     */
    public void setXData(double[] ds) {
        xData = ds;
    }
}
